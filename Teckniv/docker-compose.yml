version: '3.8'

services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: teckniv-postgres
    environment:
      POSTGRES_DB: teckniv_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: suyoghkm
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - teckniv-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: teckniv-app
    environment:
      # Database connection
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/teckniv_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: suyoghkm
      # JPA settings
      SPRING_JPA_SHOW_SQL: 'false'
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      # Flyway settings
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: 'true'
      SPRING_FLYWAY_ENABLED: 'true'
      # Server settings
      SERVER_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - teckniv-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  teckniv-network:
    driver: bridge
